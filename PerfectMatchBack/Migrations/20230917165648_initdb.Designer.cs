// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PerfectMatchBack.Models;

#nullable disable

namespace PerfectMatchBack.Migrations
{
    [DbContext(typeof(PerfectMatchContext))]
    [Migration("20230917165648_initdb")]
    partial class initdb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PerfectMatchBack.Models.Access", b =>
                {
                    b.Property<int>("IdAccess")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAccess");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAccess"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("password");

                    b.HasKey("IdAccess")
                        .HasName("PK__Access__FF93766616CDF460");

                    b.ToTable("Access", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.AnimalType", b =>
                {
                    b.Property<int>("IdAnimalType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idAnimalType");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimalType"));

                    b.Property<string>("AnimalTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("animalTypeName");

                    b.HasKey("IdAnimalType")
                        .HasName("PK__AnimalTy__2F24A3993AE8DA2B");

                    b.ToTable("AnimalType", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Breed", b =>
                {
                    b.Property<int>("IdBreed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBreed");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBreed"));

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("breedName");

                    b.Property<int>("IdAnimalType")
                        .HasColumnType("int")
                        .HasColumnName("idAnimalType");

                    b.HasKey("IdBreed")
                        .HasName("PK__Breed__E07BCBB91BCC26AC");

                    b.HasIndex("IdAnimalType");

                    b.ToTable("Breed", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCity");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCity"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cityName");

                    b.Property<int?>("IdDepartment")
                        .HasColumnType("int")
                        .HasColumnName("idDepartment");

                    b.HasKey("IdCity")
                        .HasName("PK__City__814F31DE7B563306");

                    b.HasIndex("IdDepartment");

                    b.ToTable("City", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Comment", b =>
                {
                    b.Property<int>("IdComment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idComment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdComment"));

                    b.Property<string>("Comment1")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("comment");

                    b.Property<int?>("IdCommentFk")
                        .HasColumnType("int")
                        .HasColumnName("idCommentFk");

                    b.Property<int?>("IdPublication")
                        .HasColumnType("int")
                        .HasColumnName("idPublication");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("IdComment")
                        .HasName("PK__Comment__0370297E9127B084");

                    b.HasIndex("IdCommentFk");

                    b.HasIndex("IdPublication");

                    b.HasIndex("IdUser");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Department", b =>
                {
                    b.Property<int>("IdDepartment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDepartment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDepartment"));

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdDepartment")
                        .HasName("PK_Department");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Gender", b =>
                {
                    b.Property<int>("IdGender")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGender");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGender"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("genderName");

                    b.HasKey("IdGender");

                    b.ToTable("Gender", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Image", b =>
                {
                    b.Property<int>("IdImage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idImage");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImage"));

                    b.Property<string>("DataImage")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("IdPublication")
                        .HasColumnType("int")
                        .HasColumnName("idPublication");

                    b.HasKey("IdImage")
                        .HasName("PK_Image1");

                    b.HasIndex("IdPublication");

                    b.ToTable("Image", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Movement", b =>
                {
                    b.Property<int>("IdMovement")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovement");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovement"));

                    b.Property<double?>("Amount")
                        .HasColumnType("float")
                        .HasColumnName("amount");

                    b.Property<int?>("IdBuyer")
                        .HasColumnType("int")
                        .HasColumnName("idBuyer");

                    b.Property<int?>("IdPublication")
                        .HasColumnType("int")
                        .HasColumnName("idPublication");

                    b.Property<int?>("IdSeller")
                        .HasColumnType("int")
                        .HasColumnName("idSeller");

                    b.HasKey("IdMovement")
                        .HasName("PK__Movement__5B3BB2F5E4A1C9F0");

                    b.HasIndex("IdBuyer");

                    b.HasIndex("IdPublication");

                    b.HasIndex("IdSeller");

                    b.ToTable("Movement", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Notification", b =>
                {
                    b.Property<int>("IdNotifacation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNotifacation");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNotifacation"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("description");

                    b.Property<int?>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("IdNotifacation")
                        .HasName("PK__Notifica__C24D00C423C065BF");

                    b.HasIndex("IdUser");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Publication", b =>
                {
                    b.Property<int>("IdPublication")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idPublication");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPublication"));

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<string>("AnimalName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("animalName");

                    b.Property<string>("Description")
                        .HasMaxLength(400)
                        .IsUnicode(false)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("description");

                    b.Property<int>("IdAnimalType")
                        .HasColumnType("int")
                        .HasColumnName("idAnimalType");

                    b.Property<int>("IdBreed")
                        .HasColumnType("int")
                        .HasColumnName("idBreed");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int")
                        .HasColumnName("idCity");

                    b.Property<int>("IdGender")
                        .HasColumnType("int")
                        .HasColumnName("idGender");

                    b.Property<int?>("IdOwner")
                        .HasColumnType("int")
                        .HasColumnName("idOwner");

                    b.Property<double?>("Weight")
                        .HasColumnType("float")
                        .HasColumnName("weight");

                    b.HasKey("IdPublication")
                        .HasName("PK__Publicat__ECEE91EED6DB5C2C");

                    b.HasIndex("IdAnimalType");

                    b.HasIndex("IdBreed");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdGender");

                    b.HasIndex("IdOwner");

                    b.ToTable("Publication", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("roleName");

                    b.HasKey("IdRole")
                        .HasName("PK__Role__E5045C54775D45A0");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime")
                        .HasColumnName("birthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<int?>("IdAccess")
                        .HasColumnType("int")
                        .HasColumnName("idAccess");

                    b.Property<int?>("IdCity")
                        .HasColumnType("int")
                        .HasColumnName("idCity");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("IdUser")
                        .HasName("PK__User__3717C98256EB3AB3");

                    b.HasIndex("IdAccess");

                    b.HasIndex("IdCity");

                    b.HasIndex("IdRole");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Breed", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.AnimalType", "IdAnimalTypeNavigation")
                        .WithMany("Breeds")
                        .HasForeignKey("IdAnimalType")
                        .IsRequired()
                        .HasConstraintName("FK__Breed__idAnimalT__35BCFE0A");

                    b.Navigation("IdAnimalTypeNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.City", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.Department", "IdDepartmentNavigation")
                        .WithMany("Cities")
                        .HasForeignKey("IdDepartment")
                        .HasConstraintName("FK_City_Department");

                    b.Navigation("IdDepartmentNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Comment", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.Comment", "IdCommentFkNavigation")
                        .WithMany("InverseIdCommentFkNavigation")
                        .HasForeignKey("IdCommentFk")
                        .HasConstraintName("FK__Comment__idComme__36B12243");

                    b.HasOne("PerfectMatchBack.Models.Publication", "IdPublicationNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdPublication")
                        .HasConstraintName("FK__Comment__idPubli__37A5467C");

                    b.HasOne("PerfectMatchBack.Models.User", "IdUserNavigation")
                        .WithMany("Comments")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Comment__idUser__38996AB5");

                    b.Navigation("IdCommentFkNavigation");

                    b.Navigation("IdPublicationNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Image", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.Publication", "IdPublicationNavigation")
                        .WithMany("Images")
                        .HasForeignKey("IdPublication")
                        .IsRequired()
                        .HasConstraintName("FK_Image1_Publication");

                    b.Navigation("IdPublicationNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Movement", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.User", "IdBuyerNavigation")
                        .WithMany("MovementIdBuyerNavigations")
                        .HasForeignKey("IdBuyer")
                        .HasConstraintName("FK__Movement__idBuye__398D8EEE");

                    b.HasOne("PerfectMatchBack.Models.Publication", "IdPublicationNavigation")
                        .WithMany("Movements")
                        .HasForeignKey("IdPublication")
                        .HasConstraintName("FK__Movement__idPubl__3A81B327");

                    b.HasOne("PerfectMatchBack.Models.User", "IdSellerNavigation")
                        .WithMany("MovementIdSellerNavigations")
                        .HasForeignKey("IdSeller")
                        .HasConstraintName("FK__Movement__idSell__3B75D760");

                    b.Navigation("IdBuyerNavigation");

                    b.Navigation("IdPublicationNavigation");

                    b.Navigation("IdSellerNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Notification", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.User", "IdUserNavigation")
                        .WithMany("Notifications")
                        .HasForeignKey("IdUser")
                        .HasConstraintName("FK__Notificat__idUse__3C69FB99");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Publication", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.AnimalType", "IdAnimalTypeNavigation")
                        .WithMany("Publications")
                        .HasForeignKey("IdAnimalType")
                        .IsRequired()
                        .HasConstraintName("FK__Publicati__idAni__3D5E1FD2");

                    b.HasOne("PerfectMatchBack.Models.Breed", "IdBreedNavigation")
                        .WithMany("Publications")
                        .HasForeignKey("IdBreed")
                        .IsRequired()
                        .HasConstraintName("FK__Publicati__idBre__3E52440B");

                    b.HasOne("PerfectMatchBack.Models.City", "IdCityNavigation")
                        .WithMany("Publications")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("FK__Publicati__idCit__3F466844");

                    b.HasOne("PerfectMatchBack.Models.Gender", "IdGenderNavigation")
                        .WithMany("Publications")
                        .HasForeignKey("IdGender")
                        .IsRequired()
                        .HasConstraintName("FK_Publication_Gender");

                    b.HasOne("PerfectMatchBack.Models.User", "IdOwnerNavigation")
                        .WithMany("Publications")
                        .HasForeignKey("IdOwner")
                        .HasConstraintName("FK__Publicati__idOwn__403A8C7D");

                    b.Navigation("IdAnimalTypeNavigation");

                    b.Navigation("IdBreedNavigation");

                    b.Navigation("IdCityNavigation");

                    b.Navigation("IdGenderNavigation");

                    b.Navigation("IdOwnerNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.User", b =>
                {
                    b.HasOne("PerfectMatchBack.Models.Access", "IdAccessNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdAccess")
                        .HasConstraintName("FK__User__idAccess__412EB0B6");

                    b.HasOne("PerfectMatchBack.Models.City", "IdCityNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdCity")
                        .HasConstraintName("FK__User__idCity__4222D4EF");

                    b.HasOne("PerfectMatchBack.Models.Role", "IdRoleNavigation")
                        .WithMany("Users")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK__User__idRole__4316F928");

                    b.Navigation("IdAccessNavigation");

                    b.Navigation("IdCityNavigation");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Access", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.AnimalType", b =>
                {
                    b.Navigation("Breeds");

                    b.Navigation("Publications");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Breed", b =>
                {
                    b.Navigation("Publications");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.City", b =>
                {
                    b.Navigation("Publications");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Comment", b =>
                {
                    b.Navigation("InverseIdCommentFkNavigation");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Department", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Gender", b =>
                {
                    b.Navigation("Publications");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Publication", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Movements");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("PerfectMatchBack.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("MovementIdBuyerNavigations");

                    b.Navigation("MovementIdSellerNavigations");

                    b.Navigation("Notifications");

                    b.Navigation("Publications");
                });
#pragma warning restore 612, 618
        }
    }
}
